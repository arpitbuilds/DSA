class Solution {
public:
      void merge(vector<int>&arr,int low,int mid,int high){
      vector<int>temp;
      int i=low;
      int j=mid+1;
      while(i<=mid && j<=high){
          if(arr[i]>=arr[j]){
              temp.push_back(arr[j]);
              j++;
          }
          else{
              temp.push_back(arr[i]);
              i++;
          }
      }
          while(i<=mid){
              temp.push_back(arr[i]);
              i++;
          }
          while(j<=high){
              temp.push_back(arr[j]);
              j++;
          }
         for(int k=low;k<=high;k++){
          arr[k]=temp[k-low];
      }
      }
   
  
    void ms(vector<int>&arr,int low,int high){
        if(low==high){
            return;
        }
        int mid=(low+high)/2;
        ms(arr,low,mid);
        ms(arr,mid+1,high);
        merge(arr,low,mid,high);
    }
    vector<int> sortArray(vector<int>& nums) {
        ms(nums,0,nums.size()-1);
        return nums;
        
    }
};
